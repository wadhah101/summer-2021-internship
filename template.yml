---
AWSTemplateFormatVersion: "2010-09-09"
Description: CodePipeline with CodeBuild workflow to run TaskCat ,  cfn-lint , cfn-nag
Transform: AWS::Serverless-2016-10-31
Parameters:
  # build related params
  AppSAMTemplateFile:
    Type: String
    Description: location of the sam file to test and deploy
    Default: app.template.yml

  SelfRepoArn:
    Type: String
    Default: arn:aws:codecommit:us-west-1:477886346812:cfn-test-lint-pipeline

  SelfRepo:
    Type: String
    Default: cfn-test-lint-pipeline

  InfraRepoArn:
    Type: String
    Default: arn:aws:codecommit:us-west-1:477886346812:intership-sam-template-demo

  InfraRepo:
    Type: String
    Default: intership-sam-template-demo

  InfraRepoBranch:
    Type: String
    Default: master

Globals:
  Function:
    Timeout: 3

Resources:
  # storage
  CodeBucket:
    Type: AWS::S3::Bucket

  LintingBucket:
    Type: AWS::S3::Bucket
    # DeletionPolicy: Retain
    # UpdateReplacePolicy: Retain
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html

  PipelineBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete

  # roles
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: codepipeline-service
          PolicyDocument:
            Statement:
              - Action:
                  - codecommit:*
                Resource:
                  - !Ref InfraRepoArn
                  - !Ref SelfRepoArn
                Effect: Allow
              - Action:
                  - logs:*
                  - lambda:*
                  - cloudwatch:*
                  - codebuild:*
                  - s3:*
                Resource: "*"
                Effect: Allow
              - Action:
                  - s3:PutObject
                Resource:
                  - arn:aws:s3:::codepipeline*
                Effect: Allow
              - Action:
                  - logs:*
                  - lambda:*
                  - cloudwatch:*
                  - codebuild:*
                  - s3:*
                  - ec2:*
                  - iam:PassRole
                Resource: "*"
                Effect: Allow
            Version: "2012-10-17"

  # specify roles
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: codebuild-service
          PolicyDocument:
            Statement:
              - Action:
                  - apigateway:*
                  - cloudformation:*
                  - cloudwatch:*
                  - cloudtrail:*
                  - codebuild:*
                  - codecommit:*
                  - codepipeline:*
                  - config:*
                  - dynamodb:*
                  - ec2:*
                  - iam:*
                  - kms:*
                  - lambda:*
                  - logs:*
                  - redshift:*
                  - rds:*
                  - secretsmanager:*
                  - s3:*
                  - sns:*
                  - sqs:*
                Effect: Allow
                Resource: "*"
            Version: "2012-10-17"

  CFNLintBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Run CFN-lint
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "masahide/cfn-python-lint"
        EnvironmentVariables:
          - Name: SAM_TEMPLATE_FILE
            Value: !Ref AppSAMTemplateFile
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspecs/cfn-lint.buildspec.yml
      TimeoutInMinutes: 10

  CFNNAGBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Run CFN-lint
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "stelligent/cfn_nag"
        EnvironmentVariables:
          - Name: SAM_TEMPLATE_FILE
            Value: !Ref AppSAMTemplateFile
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspecs/cfn-nag.buildspec.yml
      TimeoutInMinutes: 10

  TaskCatBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Run TaskCat
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "taskcat/taskcat"
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: SAM_TEMPLATE_FILE
            Value: !Ref AppSAMTemplateFile
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspecs/taskcat.buildspec.yml
      TimeoutInMinutes: 60

  PackageSamBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Package sam file
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:5.0"
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Value: !Ref CodeBucket
          - Name: SAM_TEMPLATE_FILE
            Value: !Ref AppSAMTemplateFile
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspecs/package.buildspec.yml
      TimeoutInMinutes: 60

  SAMBuildDeploy:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Run sam
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:5.0"
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Value: !Ref CodeBucket
          - Name: SAM_TEMPLATE_FILE
            Value: !Ref AppSAMTemplateFile
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspecs/app.buildspec.yml
      TimeoutInMinutes: 10

  LintDeployBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: upload testing result to s3
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:5.0"
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Value: !Ref LintingBucket

      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspecs/upload.buildspec.yml
      TimeoutInMinutes: 10

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: CodeSourcing
          Actions:
            - InputArtifacts: []
              Name: ProjectSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              OutputArtifacts:
                - Name: ProjectSourceCode
              Configuration:
                RepositoryName: !Ref InfraRepo
                BranchName: !Ref InfraRepoBranch

            - InputArtifacts: []
              Name: PipelineSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              OutputArtifacts:
                - Name: PipelineSourceCode
              Configuration:
                RepositoryName: !Ref SelfRepo
                BranchName: !Ref InfraRepoBranch

        - Name: Packaging
          Actions:
            - InputArtifacts:
                - Name: PipelineSourceCode
                - Name: ProjectSourceCode
              OutputArtifacts:
                - Name: PackagingArtifacts
              Name: PackageSam
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref PackageSamBuild
                PrimarySource: PipelineSourceCode

        - Name: LintingTesting
          Actions:
            - InputArtifacts:
                - Name: PipelineSourceCode
                - Name: PackagingArtifacts
              OutputArtifacts:
                - Name: LintingArtifacts
              Name: LintSam
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CFNLintBuild
                PrimarySource: PipelineSourceCode
              RunOrder: 1

            - InputArtifacts:
                - Name: PipelineSourceCode
                - Name: PackagingArtifacts
              OutputArtifacts:
                - Name: NagArtifacts
              Name: NagSam
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CFNNAGBuild
                PrimarySource: PipelineSourceCode
              RunOrder: 1

            - InputArtifacts:
                - Name: PipelineSourceCode
                - Name: PackagingArtifacts
              OutputArtifacts:
                - Name: taskcatArtifacts
              Name: Taskcat
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref TaskCatBuild
                PrimarySource: PipelineSourceCode

              RunOrder: 1

        - Name: Upload
          Actions:
            - InputArtifacts:
                - Name: PipelineSourceCode
                - Name: taskcatArtifacts
                - Name: NagArtifacts
                - Name: LintingArtifacts
              Name: UploadRes
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref LintDeployBuild
                PrimarySource: PipelineSourceCode

              # starting actual build
        - Name: Build
          Actions:
            - InputArtifacts:
                - Name: PackagingArtifacts
                - Name: ProjectSourceCode
                - Name: PipelineSourceCode
              Name: buildAnddeploySAM
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              OutputArtifacts:
                - Name: SAMArtifacts
              Configuration:
                ProjectName: !Ref SAMBuildDeploy
                PrimarySource: PipelineSourceCode

      ArtifactStore:
        Type: S3
        Location: !Ref PipelineBucket

  # messaging
  MySNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: "cfntopic"

  CodePipelineFinishRule:
    Type: "AWS::Events::Rule"
    Properties:
      EventPattern:
        source:
          - aws.codepipeline
        detail-type:
          - CodePipeline Pipeline Execution State Change
        detail:
          state:
            - SUCCEEDED
            - FAILED
        resources:
          - !Ref Pipeline

      State: ENABLED

      Targets:
        - Arn: !Ref MySNSTopic
          Id: "OpsTopic"

  SNSPayloadLogger:
    Type: AWS::Serverless::Function
    Properties:
      Description: A Lambda function that logs the payload of messages sent to an associated SNS topic.
      Runtime: nodejs14.x
      Handler: dist/lambdas/mail/approve-mail.handler
      Events:
        SNSTopicEvent:
          Type: SNS
          Properties:
            Topic: !Ref MySNSTopic
      MemorySize: 128
      Timeout: 100
      Policies:
        - AWSLambdaBasicExecutionRole

  EventTopicPolicy:
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: "sns:Publish"
            Resource: "*"
      Topics:
        - !Ref MySNSTopic

Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
    Description: CodePipeline URL
  TaskCatDashboardUrl:
    Value: !Sub http://${LintingBucket}.s3-website-us-west-1.amazonaws.com
    Description: URL for TaskCat Dashboard (Available after the CodePipeline completes)
