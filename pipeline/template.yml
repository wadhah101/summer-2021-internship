---
AWSTemplateFormatVersion: "2010-09-09"
Description: CodePipeline with CodeBuild workflow to run TaskCat ,  cfn-lint , cfn-nag
Transform: AWS::Serverless-2016-10-31
Parameters:
  FrontEndRepo:
    Type: String
    Default: internship-pipeline-report-front-end

  AppBaseStackName:
    Type: String
    Default: intership-infra

  RoleStackName:
    Type: String
    Default: cfn-lint-pipeline-roles

  MessagingStackName:
    Type: String
    Default: cfn-lint-pipeline-messaging

  StorageStackName:
    Type: String
    Default: cfn-lint-pipeline-storage

  ServerlessStackName:
    Type: String
    Default: cfn-lint-pipeline-serverless

  AppSAMTemplateFile:
    Type: String
    Description: location of the sam file to test and deploy
    Default: app.template.yml

  SelfRepo:
    Type: String
    Default: cfn-test-lint-pipeline

  InfraRepo:
    Type: String
    Default: intership-sam-template-demo

  InfraRepoBranch:
    Type: String
    Default: master

Resources:
  # BUILDS
  CFNLintBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Run CFN-lint
      ServiceRole:
        Fn::ImportValue: !Sub "${RoleStackName}-CodeBuildRoleArn"

      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "masahide/cfn-python-lint"
        EnvironmentVariables:
          - Name: SAM_TEMPLATE_FILE
            Value: !Ref AppSAMTemplateFile
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspecs/cfn-lint.buildspec.yml
      TimeoutInMinutes: 10

  CFNNAGBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Run CFN-lint
      ServiceRole:
        Fn::ImportValue: !Sub "${RoleStackName}-CodeBuildRoleArn"
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "stelligent/cfn_nag"
        EnvironmentVariables:
          - Name: SAM_TEMPLATE_FILE
            Value: !Ref AppSAMTemplateFile
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspecs/cfn-nag.buildspec.yml
      TimeoutInMinutes: 10

  TaskCatBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Run TaskCat
      ServiceRole:
        Fn::ImportValue: !Sub "${RoleStackName}-CodeBuildRoleArn"
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "taskcat/taskcat"
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: SAM_TEMPLATE_FILE
            Value: !Ref AppSAMTemplateFile
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspecs/taskcat.buildspec.yml
      TimeoutInMinutes: 60

  PackageSamBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Package sam file
      ServiceRole:
        Fn::ImportValue: !Sub "${RoleStackName}-CodeBuildRoleArn"

      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:5.0"
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Value:
              Fn::ImportValue: !Sub "${StorageStackName}-CodeBucketID"

          - Name: SAM_TEMPLATE_FILE
            Value: !Ref AppSAMTemplateFile
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspecs/package.buildspec.yml
      TimeoutInMinutes: 60

  SAMBuildDeploy:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Run sam
      ServiceRole:
        Fn::ImportValue: !Sub "${RoleStackName}-CodeBuildRoleArn"

      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:5.0"
        EnvironmentVariables:
          - Value: !Ref AppBaseStackName
            Name: APP_BASE_STACK_NAME
          - Name: SAM_TEMPLATE_FILE
            Value: !Ref AppSAMTemplateFile
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspecs/app.buildspec.yml
      TimeoutInMinutes: 10

  FrontEndBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Run sam
      ServiceRole:
        Fn::ImportValue: !Sub "${RoleStackName}-CodeBuildRoleArn"

      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:5.0"
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Value:
              Fn::ImportValue: !Sub "${StorageStackName}-LintingBucketID"
          - Name: TABLE_NAME
            Value:
              Fn::ImportValue: !Sub "${StorageStackName}-LintingTableID"

      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspecs/front-end.buildspec.yml
      TimeoutInMinutes: 15

  #################

  # PIPELINE
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::ImportValue: !Sub "${RoleStackName}-CodePipelineRoleArn"

      Stages:
        - Name: CodeSourcing
          Actions:
            - InputArtifacts: []
              Name: ProjectSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              OutputArtifacts:
                - Name: ProjectSourceCode
              Configuration:
                RepositoryName: !Ref InfraRepo
                BranchName: !Ref InfraRepoBranch

            - InputArtifacts: []
              Name: FrontEndSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              OutputArtifacts:
                - Name: FrontEndSourceCode
              Configuration:
                RepositoryName: !Ref FrontEndRepo
                BranchName: master
                PollForSourceChanges: false

            - InputArtifacts: []
              Name: PipelineSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              OutputArtifacts:
                - Name: PipelineSourceCode
              Configuration:
                RepositoryName: !Ref SelfRepo
                BranchName: !Ref InfraRepoBranch
                PollForSourceChanges: false

        - Name: Packaging
          Actions:
            - InputArtifacts:
                [Name: PipelineSourceCode, Name: ProjectSourceCode]
              OutputArtifacts: [Name: PackagingArtifacts]
              Name: PackageSam
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref PackageSamBuild
                PrimarySource: PipelineSourceCode
                # EnvironmentVariables: '[{"name":"Release_ID","value":"#{codepipeline.PipelineExecutionId}","type":"PLAINTEXT"}]'

        - Name: LintingTesting
          Actions:
            - InputArtifacts:
                - Name: PipelineSourceCode
                - Name: PackagingArtifacts
              OutputArtifacts:
                - Name: LintingArtifacts
              Name: LintSam
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CFNLintBuild
                PrimarySource: PipelineSourceCode
              RunOrder: 1

            - InputArtifacts:
                - Name: PipelineSourceCode
                - Name: PackagingArtifacts
              OutputArtifacts:
                - Name: NagArtifacts
              Name: NagSam
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CFNNAGBuild
                PrimarySource: PipelineSourceCode
              RunOrder: 1

            - InputArtifacts:
                - Name: PipelineSourceCode
                - Name: PackagingArtifacts
              OutputArtifacts:
                - Name: taskcatArtifacts
              Name: Taskcat
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref TaskCatBuild
                PrimarySource: PipelineSourceCode
              RunOrder: 1

        - Name: UploadLintingResult
          Actions:
            - InputArtifacts: [Name: taskcatArtifacts]
              Name: TaskCatUpload
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: S3
              Configuration:
                BucketName:
                  Fn::ImportValue: !Sub "${StorageStackName}-LintingBucketID"
                Extract: true
                ObjectKey: "#{codepipeline.PipelineExecutionId}"

              RunOrder: 1

            - Name: CFNLintUpload
              InputArtifacts:
                - Name: LintingArtifacts
                - Name: NagArtifacts
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Version: "1"
                Provider: Lambda
              Configuration:
                FunctionName:
                  Fn::ImportValue: !Sub "${ServerlessStackName}-InsertBuildResult"
              RunOrder: 1

        - Name: FrontEndBuild
          Actions:
            - InputArtifacts:
                [Name: FrontEndSourceCode, Name: PipelineSourceCode]
              OutputArtifacts: [Name: FrontEndOutArtifacts]
              Name: PackageSam
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref FrontEndBuild
                PrimarySource: PipelineSourceCode
                EnvironmentVariables: '[{"name":"Release_ID","value":"#{codepipeline.PipelineExecutionId}","type":"PLAINTEXT"}]'
              RunOrder: 2

        - Name: DeployDev
          Actions:
            - InputArtifacts:
                - Name: PackagingArtifacts
                - Name: ProjectSourceCode
                - Name: PipelineSourceCode
              Name: DeploySAM
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild

              Configuration:
                ProjectName: !Ref SAMBuildDeploy
                PrimarySource: PipelineSourceCode
                EnvironmentVariables: '[{"name":"SAM_ENV","value":"dev","type":"PLAINTEXT"}]'
              RunOrder: 2

        - Name: DeployStage
          Actions:
            - Name: ApproveByDeveloper
              InputArtifacts: []
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: "1"
                Provider: Manual
              Configuration:
                NotificationArn:
                  Fn::ImportValue: !Sub "${MessagingStackName}-StageNotificationSNSTopicArn"
                CustomData: "Review and approve deploying to stage with ID #{codepipeline.PipelineExecutionId}"
                ExternalEntityLink: !Sub "/report/#{codepipeline.PipelineExecutionId}"
              RunOrder: 1
            - InputArtifacts:
                - Name: PackagingArtifacts
                - Name: ProjectSourceCode
                - Name: PipelineSourceCode
              Name: DeploySAM
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref SAMBuildDeploy
                PrimarySource: PipelineSourceCode
                EnvironmentVariables: '[{"name":"SAM_ENV","value":"stage","type":"PLAINTEXT"}]'
              RunOrder: 2

        - Name: DeployProd
          Actions:
            - Name: ApproveByOwner
              InputArtifacts: []
              Configuration:
                NotificationArn:
                  Fn::ImportValue: !Sub "${MessagingStackName}-ProdNotificationSNSTopicArn"
                CustomData: "Review and approve deploying to production"
                ExternalEntityLink: !Sub "/report/#{codepipeline.PipelineExecutionId}"
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: "1"
                Provider: Manual
            - Name: DeploySAM
              InputArtifacts:
                - Name: PackagingArtifacts
                - Name: ProjectSourceCode
                - Name: PipelineSourceCode
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref SAMBuildDeploy
                PrimarySource: PipelineSourceCode
                EnvironmentVariables: '[{"name":"SAM_ENV","value":"prod","type":"PLAINTEXT"}]'
              RunOrder: 2

      ArtifactStore:
        Type: S3
        Location:
          Fn::ImportValue: !Sub "${StorageStackName}-PipelineArtifactBucketID"

Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
    Description: CodePipeline URL
  PipelineID:
    Value: !Ref Pipeline
    Export:
      Name: !Join ["-", [!Ref AWS::StackName, PipelineID]]
  PipelineArn:
    Value: !Sub "arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}"
    Export:
      Name: !Join ["-", [!Ref AWS::StackName, PipelineArn]]
