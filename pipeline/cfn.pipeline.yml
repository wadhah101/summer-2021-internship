---
AWSTemplateFormatVersion: "2010-09-09"
Description: CodePipeline with CodeBuild workflow to run TaskCat ,  cfn-lint , cfn-nag
Parameters:
  # build related params
  AppSAMTemplateFile:
    Type: String
    Description: location of the sam file to test and deploy
    Default: app.template.yml

  # github related variables
  GitHubUser:
    Type: String
    Description: GitHub User
    Default: "wadhah101"
  GitHubRepo:
    Type: String
    Description: GitHub Repo to pull from. Only the Name. not the URL
    Default: "workshop-sam-cfn"
  GitHubBranch:
    Type: String
    Description: GitHub Branch
    Default: "master"
  GitHubToken:
    NoEcho: true
    Type: String
    Default: "{{resolve:secretsmanager:github/personal-access-token:SecretString}}"
    Description: GitHub Token. Must be defined in AWS Secrets Manager and here https://github.com/settings/tokens

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "GitHub Configuration"
        Parameters:
          - GitHubToken
          - GitHubUser
          - GitHubRepo
          - GitHubBranch
    ParameterLabels:
      GitHubToken:
        default: GitHub OAuth2 Token
      GitHubUser:
        default: GitHub User/Org Name
      GitHubRepo:
        default: GitHub Repository Name
      GitHubBranch:
        default: GitHub Branch Name

Resources:
  # storage
  TaskCatBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html

  SAMBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private

  PipelineBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete

  # roles
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: codepipeline-service
          PolicyDocument:
            Statement:
              - Action:
                  - logs:*
                  - lambda:*
                  - cloudwatch:*
                  - codebuild:*
                  - s3:*
                Resource: "*"
                Effect: Allow
              - Action:
                  - s3:PutObject
                Resource:
                  - arn:aws:s3:::codepipeline*
                Effect: Allow
              - Action:
                  - logs:*
                  - lambda:*
                  - cloudwatch:*
                  - codebuild:*
                  - s3:*
                  - ec2:*
                  - iam:PassRole
                Resource: "*"
                Effect: Allow
            Version: "2012-10-17"

  # specify roles
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: codebuild-service
          PolicyDocument:
            Statement:
              - Action:
                  - apigateway:*
                  - cloudformation:*
                  - cloudwatch:*
                  - cloudtrail:*
                  - codebuild:*
                  - codecommit:*
                  - codepipeline:*
                  - config:*
                  - dynamodb:*
                  - ec2:*
                  - iam:*
                  - kms:*
                  - lambda:*
                  - logs:*
                  - redshift:*
                  - rds:*
                  - secretsmanager:*
                  - s3:*
                  - sns:*
                  - sqs:*
                Effect: Allow
                Resource: "*"
            Version: "2012-10-17"

  # codebuild
  # CodeBuildTaskCatTest:
  #   Type: AWS::CodeBuild::Project
  #   Properties:
  #     Description: Run TaskCat
  #     ServiceRole: !GetAtt CodeBuildRole.Arn
  #     Artifacts:
  #       Type: CODEPIPELINE
  #     Environment:
  #       Type: LINUX_CONTAINER
  #       ComputeType: BUILD_GENERAL1_SMALL
  #       Image: "aws/codebuild/standard:5.0"
  #     Source:
  #       Type: CODEPIPELINE
  #     TimeoutInMinutes: 60

  CFNLintBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Run CFN-lint
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:5.0"
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Value: !Ref SAMBucket
          - Name: SAM_TEMPLATE_FILE
            Value: !Ref AppSAMTemplateFile
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspecs/cfn-lint.buildspec.yml
      TimeoutInMinutes: 10

  SAMBuildDeploy:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Run sam
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:5.0"
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Value: !Ref SAMBucket
          - Name: SAM_TEMPLATE_FILE
            Value: !Ref AppSAMTemplateFile
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspecs/app.buildspec.yml
      TimeoutInMinutes: 10

  # CodeBuildDashboard:
  #   Type: AWS::CodeBuild::Project
  #   Properties:
  #     Description: Deploy site to S3
  #     ServiceRole: !GetAtt CodeBuildRole.Arn
  #     Artifacts:
  #       Type: CODEPIPELINE
  #     Environment:
  #       Type: LINUX_CONTAINER
  #       ComputeType: BUILD_GENERAL1_SMALL
  #       Image: "aws/codebuild/amazonlinux2-x86_64-standard:3.0"
  #     Source:
  #       Type: CODEPIPELINE
  #       BuildSpec: !Sub |
  #         version: 0.2
  #         phases:
  #           install:
  #             runtime-versions:
  #               python: 3.7
  #           post_build:
  #             commands:
  #               - aws s3 cp --recursive --acl public-read ./taskcat_outputs s3://${TaskCatBucket}/
  #         artifacts:
  #           type: zip
  #           files:
  #             - ./index.html
  #     TimeoutInMinutes: 10

  # pipeline
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        # checking source code
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: "1"
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceArtifacts
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              RunOrder: 1

        - Name: LintingTesting
          Actions:
            - InputArtifacts:
                - Name: SourceArtifacts
              Name: LintSam
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CFNLintBuild
              RunOrder: 2

              # starting actual build
        - Name: Build
          Actions:
            - InputArtifacts:
                - Name: SourceArtifacts
              Name: buildAnddeploySAM
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              OutputArtifacts:
                - Name: SAMArtifacts
              Configuration:
                ProjectName: !Ref SAMBuildDeploy
              RunOrder: 3

          # - InputArtifacts:
          #       - Name: SourceArtifacts
          #     Name: RunTaskCat
          #     ActionTypeId:
          #       Category: Test
          #       Owner: AWS
          #       Version: "1"
          #       Provider: CodeBuild
          #     OutputArtifacts:
          #       - Name: TaskCatArtifacts
          #     Configuration:
          #       ProjectName:
          #         Ref: CodeBuildTaskCatTest
          #     RunOrder: 1

          #   - InputArtifacts:
          #       - Name: TaskCatArtifacts
          #     Name: TaskCatDashboard
          #     ActionTypeId:
          #       Category: Test
          #       Owner: AWS
          #       Version: "1"
          #       Provider: CodeBuild
          #     OutputArtifacts: []
          #     Configuration:
          #       ProjectName:
          #         Ref: CodeBuildDashboard
          #     RunOrder: 2

      ArtifactStore:
        Type: S3
        Location: !Ref PipelineBucket
Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
    Description: CodePipeline URL
  TaskCatDashboardUrl:
    Value: !Sub http://${TaskCatBucket}.s3-website-us-west-1.amazonaws.com
    Description: URL for TaskCat Dashboard (Available after the CodePipeline completes)
