---
AWSTemplateFormatVersion: "2010-09-09"
Description: CodePipeline with CodeBuild workflow to run TaskCat ,  cfn-lint , cfn-nag
Parameters:
  # build related params
  AppSAMTemplateFile:
    Type: String
    Description: location of the sam file to test and deploy
    Default: app.template.yml

  InfraRepoArn:
    Type: String
    Default: arn:aws:codecommit:us-west-1:477886346812:cfn-test-lint-pipeline

  InfraRepo:
    Type: String
    Default: cfn-test-lint-pipeline

  InfraRepoBranch:
    Type: String
    Default: master

Resources:
  # storage
  LintBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html

  PipelineBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete

  # roles
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: codepipeline-service
          PolicyDocument:
            Statement:
              - Action:
                  - codecommit:*
                Resource: !Ref InfraRepoArn
                Effect: Allow
              - Action:
                  - logs:*
                  - lambda:*
                  - cloudwatch:*
                  - codebuild:*
                  - s3:*
                Resource: "*"
                Effect: Allow
              - Action:
                  - s3:PutObject
                Resource:
                  - arn:aws:s3:::codepipeline*
                Effect: Allow
              - Action:
                  - logs:*
                  - lambda:*
                  - cloudwatch:*
                  - codebuild:*
                  - s3:*
                  - ec2:*
                  - iam:PassRole
                Resource: "*"
                Effect: Allow
            Version: "2012-10-17"

  # specify roles
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: codebuild-service
          PolicyDocument:
            Statement:
              - Action:
                  - apigateway:*
                  - cloudformation:*
                  - cloudwatch:*
                  - cloudtrail:*
                  - codebuild:*
                  - codecommit:*
                  - codepipeline:*
                  - config:*
                  - dynamodb:*
                  - ec2:*
                  - iam:*
                  - kms:*
                  - lambda:*
                  - logs:*
                  - redshift:*
                  - rds:*
                  - secretsmanager:*
                  - s3:*
                  - sns:*
                  - sqs:*
                Effect: Allow
                Resource: "*"
            Version: "2012-10-17"

  CFNLintBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Run CFN-lint
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "masahide/cfn-python-lint"
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Value: !Ref LintBucket
          - Name: SAM_TEMPLATE_FILE
            Value: !Ref AppSAMTemplateFile
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspecs/cfn-lint.buildspec.yml
      TimeoutInMinutes: 10

  CFNNAGBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Run CFN-lint
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "stelligent/cfn_nag"
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Value: !Ref LintBucket
          - Name: SAM_TEMPLATE_FILE
            Value: !Ref AppSAMTemplateFile
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspecs/cfn-nag.buildspec.yml
      TimeoutInMinutes: 10

  TaskCatBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Run TaskCat
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "taskcat/taskcat"
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Value: !Ref LintBucket
          - Name: SAM_TEMPLATE_FILE
            Value: !Ref AppSAMTemplateFile
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspecs/taskcat.buildspec.yml
      TimeoutInMinutes: 60

  PackageSamBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Package sam file
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:5.0"
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Value: !Ref LintBucket
          - Name: SAM_TEMPLATE_FILE
            Value: !Ref AppSAMTemplateFile
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspecs/package.buildspec.yml
      TimeoutInMinutes: 60

  SAMBuildDeploy:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Run sam
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:5.0"
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Value: !Ref LintBucket
          - Name: SAM_TEMPLATE_FILE
            Value: !Ref AppSAMTemplateFile
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspecs/app.buildspec.yml
      TimeoutInMinutes: 10

  # pipeline
  # TODO build docker image for building and use it
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        # checking source code
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceArtifacts
              Configuration:
                RepositoryName: !Ref InfraRepo
                BranchName: !Ref InfraRepoBranch

        - Name: Packaging
          Actions:
            - InputArtifacts:
                - Name: SourceArtifacts
              OutputArtifacts:
                - Name: PackagingArtifacts
              Name: PackageSam
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref PackageSamBuild

        - Name: LintingTesting
          Actions:
            - InputArtifacts:
                - Name: PackagingArtifacts
              OutputArtifacts:
                - Name: LintingArtifacts
              Name: LintSam
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CFNLintBuild
              RunOrder: 1

            - InputArtifacts:
                - Name: PackagingArtifacts
              OutputArtifacts:
                - Name: NagArtifacts
              Name: NagSam
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CFNNAGBuild
              RunOrder: 1

            - InputArtifacts:
                - Name: PackagingArtifacts
              Name: Taskcat
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref TaskCatBuild
              RunOrder: 1

              # starting actual build
        - Name: Build
          Actions:
            - InputArtifacts:
                - Name: PackagingArtifacts
              Name: buildAnddeploySAM
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              OutputArtifacts:
                - Name: SAMArtifacts
              Configuration:
                ProjectName: !Ref SAMBuildDeploy
              RunOrder: 3

      ArtifactStore:
        Type: S3
        Location: !Ref PipelineBucket

  # messaging
  MySNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: "SampleTopic"

  EmailResultRule:
    Type: "AWS::Events::Rule"
    Properties:
      EventPattern:
        source:
          - aws.codepipeline
        detail-type:
          - CodePipeline Pipeline Execution State Change
        resources:
          - !Ref Pipeline
        detail:
          state:
            - SUCCEEDED
            - FAILED

      State: ENABLED

      Targets:
        - Arn: !Ref MySNSTopic
          Id: "OpsTopic"

  EventTopicPolicy:
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: "sns:Publish"
            Resource: "*"
      Topics:
        - !Ref MySNSTopic
      # Targets:
      #   - Arn: "arn:aws:sqs:us-west-2:081035103721:demoSQS"
      #     Id: Id1234
      #     RetryPolicy:
      #       MaximumRetryAttempts: 4
      #       MaximumEventAgeInSeconds: 400
      #     DeadLetterConfig:
      #       Arn: "arn:aws:sqs:us-west-2:081035103721:demoDLQ"

Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
    Description: CodePipeline URL
  TaskCatDashboardUrl:
    Value: !Sub http://${LintBucket}.s3-website-us-west-1.amazonaws.com
    Description: URL for TaskCat Dashboard (Available after the CodePipeline completes)
